<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:components="http://xmlns.jcp.org/jsf/composite/components">

<composite:interface>
</composite:interface>

<composite:implementation>

			<p:messages />

			<p:panelGrid columns="2" columnClasses="panelColumnSmall" id="panelGrid">
		
				name:
				<p:inputText value="#{checkController.check.name}" style="width:100%"/>
				
				url:
				<p:inputText value="#{checkController.check.url}" style="width:100%" />
				
				<style>
					.firstColumn {
						width:50px;
					}
					.nextColumn {
						width:100%;
					}
				</style>
				xpath expression:
				<h:panelGroup>
					<p:inputTextarea value="#{checkController.check.condition}" style="width:100%" />
					<br />
					Note: You can test and learn xpath using <a href="http://www.freeformatter.com/xpath-tester.html" target="_blank">this tool</a>
				</h:panelGroup>
				
				result:
				<p:inputTextarea value="#{checkController.check.textResult}" style="width:100%" />
				
				active:
				<p:selectBooleanCheckbox value="#{checkController.check.active}" />
				
				send emails:
				<h:panelGroup id="sendEmailsPanel">
					<p:selectBooleanCheckbox value="#{checkController.check.sendEmails}">
						<p:ajax event="change" update="sendEmailsPanel" />
					</p:selectBooleanCheckbox>
		
					<h:panelGroup rendered="#{checkController.check.sendEmails}">
						after
						<p:inputText value="#{checkController.check.maxErrorCount}" style="width:60px" />
						consecutive errors
					</h:panelGroup>
				</h:panelGroup>
				
				return http code:
				<p:inputText value="#{checkController.check.returnHttpCode}" style="width:50px">
						<f:validateDoubleRange minimum="1" />
				</p:inputText>
				
				timeouts (in milliseconds):
				<h:panelGrid columns="2">
					<h:panelGrid columns="3">
						connection timeout
						<p:inputText value="#{checkController.check.connectionTimeout}" style="width:80px" />
						ms,
					</h:panelGrid>
					<h:panelGrid columns="3" style="padding-right:20px">
						socket timeout
						<p:inputText value="#{checkController.check.socketTimeout}" style="width:80px" />
						ms
					</h:panelGrid>
				</h:panelGrid>
				
				schedule:
				<h:panelGrid columns="5">
					start
					<p:calendar value="#{checkController.check.scheduledStartDate}" pattern="dd.MM.yyyy HH:mm" />
					with interval
					<p:inputText value="#{checkController.check.scheduledInterval}" style="width:60px" />
					<p:selectOneMenu value="#{checkController.check.scheduledIntervalType}"
							required="true">
							<f:selectItem itemLabel="minutes" itemValue="MINUTE" />
							<f:selectItem itemLabel="hours" itemValue="HOUR" />
							<f:selectItem itemLabel="days" itemValue="DAY" />
							<f:selectItem itemLabel="months" itemValue="MONTH" />
					</p:selectOneMenu>
				</h:panelGrid>
		
				keep results for:
				<h:panelGrid columns="2">
					<p:inputText value="#{checkController.check.keepResultsValue}" style="width:60px" />
					<p:selectOneMenu value="#{checkController.check.keepResultType}"
							required="true">
							<f:selectItem itemLabel="minutes" itemValue="MINUTE" />
							<f:selectItem itemLabel="hours" itemValue="HOUR" />
							<f:selectItem itemLabel="days" itemValue="DAY" />
							<f:selectItem itemLabel="months" itemValue="MONTH" />
					</p:selectOneMenu>
				</h:panelGrid>
		
			</p:panelGrid>

			<h:panelGroup id="credentialsPanel">

				<br />

				<p:commandButton value="add basic auth." style="margin-bottom:20px" update="credentialsPanel" action="#{checkController.addCredentials()}" rendered="#{checkController.check.credentials eq null or checkController.removeCredentialsAfterSave eq true}" process="@this" />

				<p:commandButton value="remove basic auth." style="margin-bottom:20px" update="credentialsPanel" action="#{checkController.removeCredentials()}" rendered="#{checkController.check.credentials ne null and checkController.removeCredentialsAfterSave eq false}" process="@this" />

				<components:credentials rendered="#{checkController.check.credentials ne null and checkController.removeCredentialsAfterSave eq false}" />

			</h:panelGroup>

			<br />

</composite:implementation>

</html>